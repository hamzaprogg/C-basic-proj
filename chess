#include <stdio.h>
#include <string.h>

#define SIZE 8

// Function to initialize the chess board
void initializeBoard(char board[SIZE][SIZE]) {
    char initialBoard[SIZE][SIZE] = {
        {'r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'},
        {'p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'},
        {'.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.'},
        {'.', '.', '.', '.', '.', '.', '.', '.'},
        {'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'},
        {'R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R'}
    };
    
    memcpy(board, initialBoard, sizeof(initialBoard));
}

// Function to print the chess board
void printBoard(char board[SIZE][SIZE]) {
    printf("  a b c d e f g h\n");
    for (int i = 0; i < SIZE; i++) {
        printf("%d ", 8 - i); // Print row numbers
        for (int j = 0; j < SIZE; j++) {
            printf("%c ", board[i][j]);
        }
        printf("\n");
    }
}

// Function to parse the player's move input
void parseMove(char *move, int *fromRow, int *fromCol, int *toRow, int *toCol) {
    // Example move: "e2 e4"
    *fromCol = move[0] - 'a';      // Convert 'e' to 4
    *fromRow = 8 - (move[1] - '0'); // Convert '2' to 6 (since board[6][4] is e2)
    *toCol = move[3] - 'a';        // Convert 'e' to 4
    *toRow = 8 - (move[4] - '0');  // Convert '4' to 4
}

// Function to move pieces on the board
void makeMove(char board[SIZE][SIZE], int fromRow, int fromCol, int toRow, int toCol) {
    // Move the piece
    board[toRow][toCol] = board[fromRow][fromCol];
    board[fromRow][fromCol] = '.'; // Empty the old square
}

// Main function: game loop and player interaction
int main() {
    char board[SIZE][SIZE];    // Chessboard
    char move[6];              // Buffer to hold player move input
    int fromRow, fromCol, toRow, toCol; // Variables to store move coordinates
    int playerTurn = 1;        // Player 1 is white, Player 2 is black

    initializeBoard(board);    // Set up the initial board state

    // Game loop
    while (1) {
        printBoard(board);     // Display the current state of the board
        printf("Player %d's move (e.g., e2 e4): ", playerTurn);
        fgets(move, 6, stdin); // Get move input from the player

        // Exit if player inputs "q"
        if (move[0] == 'q') {
            printf("Game Over!\n");
            break;
        }

        parseMove(move, &fromRow, &fromCol, &toRow, &toCol);  // Parse the move
        makeMove(board, fromRow, fromCol, toRow, toCol);      // Apply the move

        // Switch turns: 1 -> 2, or 2 -> 1
        playerTurn = (playerTurn == 1) ? 2 : 1;
    }

    return 0;
}
